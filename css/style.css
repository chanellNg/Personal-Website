/* Changing such that padding is calculated within width and not added on to total width */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Custom Properties */

:root {
    --ff-primary: 'Lora', serif;
    --ff-secondary: 'Roboto Slab', serif;
    
    --fw-reg: 400;
    --fw-bold: 700;
    
    --clr-light: rgb(255, 255, 255);
    --clr-dark: #050005cc;
    --clr-accent: #f0bef0f3;
    
    --fs-h1: 3rem;
    --fs-h2: 2.25rem;
    --fs-h3: 1.25rem;
    --fs-body: 1rem;

    /* for image box shadow */
    --bs: 0.25em 0.25em 0.75em rgba(0,0,0,.25),
          0.125em 0.125em 0.25em rgba(0,0,0,.15); 
}

/* font size changes when width < 800px */
@media (min-width: 800px) {
    :root {
        --fs-h1: 4.5rem;
        --fs-h2: 3.75rem;
        --fs-h3: 1.5rem;
        --fs-body: 1.125rem;
    }
}

/* General styles */

/* slowly scrolls down to specified section instead of jumping to it */
html {
    scroll-behavior: smooth;
}

body {
    background: var(--clr-light);
    color: var(--clr-dark);
    margin: 0;
    font-family: var(--ff-primary);
    font-size: var(--fs-body);
    line-height: 1.6;
    
}

/* prevent from touching sides of the screen */
section {
    padding: 5em 2em;
}

img {
    display: block;
    /* to prevent overflow of parents' side by growing too big */
    max-width: 100%;
}

/* Set strong font weight to bold as font weight for section title set to regular default */
strong {
    font-weight: var(--fw-bold);
}

/* ':' means state */
/* focus state -> shows outline after clicking on the button/link */
:focus {
    outline: 3px solid var(--clr-accent);
    /* to make outline more obvious */
    outline-offset: 3px;

}

/* Buttons */

.btn {
    display: inline-block;
    padding: .5em 2.5em;
    background: var(--clr-accent);
    color: var(--clr-dark);
    /* removes underline on link text */
    text-decoration: none;
    /* cursor appearance (hand pointer) when hovering over the button */
    cursor: pointer;
    /* makes entire button smaller as inline block */
    font-size: .8rem;
    text-transform: uppercase;
    /* spacing between letters */
    letter-spacing: 2px;
    font-weight: var(--fw-bold);
    transition: transform 200ms ease-in-out;

}

/* button will become big and small when cursor hovers around it */
.btn:hover {
    transform: scale(1.1);
}

/* Typography */

h1,
h2,
h3 {
    line-height: 1;
    margin: 0;
}

h1 {
    font-size: var(--fs-h1);
}

h2 {
    font-size: var(--fs-h2);
}

h3 {
    font-size: var(--fs-h3);
}

/* use em for padding/margin as relative to font size */
.section__title {
    margin-bottom: .25em;
}

.section__title--intro {
    font-weight: var(--fw-reg);
}

/* To access the strong element inside the section title intro element */
/* use display block to ensure content inside will always appear on a new line */
.section__title--intro strong {
    display: block;
}

/* have to set margin: 0 for subtitle as use p not h1,h2,h3 */
.section__subtitle {
    margin: 0;
    font-size: var(--fs-h3);
}

.section__subtitle--intro,
.section__subtitle--about {
    background: var(--clr-accent);
    padding: .25em 1em;
    font-family: var(--ff-secondary);
    margin-bottom: 1em;
    text-decoration: none;
    max-width: 100%;
}

.section__subtitle--my-work {
    color: var(--clr-accent);
    font-weight: var(--fw-bold);
    margin-bottom: 2em;
}


/* Header Section */

header {
    display: flex;
    /* spaces the button and list apart */
    justify-content: space-between;
    padding: 1em;
}

.logo {
    max-width: 100px;
}

/* navigation list will be fixed on screen even when scrolling down the page */
.nav {
    /* position fixed: RELATIVE TO VIEWPORT (WILL ALWAYS STAY ON SCREEN)
    position absolute: relative to nearest positioned PARENT BLOCK (can be viewport if none)
    position relative: relative to OWN POSITION */
    position: fixed;
    background: var(--clr-dark);
    color: #f89cf8a4;
    /* navigation list with background covers the whole page 
    0 distance between top, bottom, left, right 
    -> z index 100 such that the navigation list is infront */
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 100;

    /* moves whole navigation list to the left (hidden from screen) by percentage of its width */
    transform: translateX(100%);
    transition: transform 250ms cubic-bezier(0.5, 0, 0.5, 1);
}

.nav__list {
    list-style: none;
    display: flex;
    height: 100%;
    /* stack on top of each other using display flex-> column
    stack navigation items vertically
    -> justify-content to space navigation links evenly in the vertical space */
    flex-direction: column;
    justify-content: space-evenly;
    /* align list items in the center */
    align-items: center;
    margin: 0;
    padding : 0;
}

.nav__link {
    color: inherit;
    font-weight: var(--fw-bold);
    font-size: var(--fs-h2);
    text-decoration: none;
}

.nav__link:hover {
    color: var(--clr-accent);
}

/* button that has the hamburger 
-> makes the button become transparent-> only hamburger left visible */
.nav-toggle {
    padding: 0.5em;
    background: transparent;
    border: 0;
    cursor: pointer;
    /* set position to absolute to allow button to be viewable 
    even when navigation list is open (button has been clicked)  */
    position: fixed;
    /* when set position to absolute-> button will go to the most left 
    -> need to set right 0-> button stick to right */
    right: 1em;
    top: 1em;
    z-index: 1000;
}

/* if nav-open, then adjust nav
-> ONLY WHEN CLICK ON NAV BUTTON */
.nav-open .nav {
    /* default navigation list is hidden to right (.nav translate 100%)
    ->when click on nav-> nav-open created
    -> nav open will transform nav to show on screen translate 0% */
    transform: translateX(0)
}

/* WHEN NAV BUTTON CLICKED-> switch navigation list from position absolute to fixed 
-> navigation button viewable while scrolling page for navigation list page
BUT does not happen for homepage as position absolute for homepage */
.nav-open .nav-toggle {
    position: fixed;
}

/* making the hamburger become a cross whn nav button clicked */
.nav-open .hamburger {
    transform: rotate(0.625turn);
    background: var(--clr-light);
}

.nav-open .hamburger::before {
    transform: rotate(90deg) translateX(-6px);
    background: var(--clr-light);
}

/* invisible when nav button clicked */
.nav-open .hamburger::after {
    opacity: 0;
}

/* hamrbuger-> cross END */

.hamburger {
    display: block;
    position: relative;
}

.hamburger,
.hamburger::before,
.hamburger::after {
    background: var(--clr-dark);
    width: 2em;
    height: 3px;
    border-radius: 1em;
    transition: transform 250ms ease-in-out;
   background-color: #f89cf8a4;;

}

.hamburger::before,
.hamburger::after {
    content: '';
    /* either give position or give display property for pseudo element*/
    position: absolute;
    /* matches width of hamburger since hamburger position is relative (not whole screeen) */
    left: 0;
    right: 0;
}

/* since hamburger before and after position is absolute-> according to parent's/ancestor's original dimensions */
.hamburger::before {
    top: 6px;
}

.hamburger::after {
    bottom: 6px;
}
/* Intro Section */

.intro {
    position: relative;
}

/* box shadow for intro image */
.intro__img {
    box-shadow: var(--bs);
}

/* sets width to be size of itself for small window size*/
.section__subtitle--intro {
    display: inline-block;
}

@media (min-width: 600px) {
    .intro {
        display: grid;
        width: min-content;
        margin: 0 auto;
        grid-column-gap: 1em;
        grid-template-areas: 
            "img title"
            "img subtitle";
        /* min content for image and max content for text */
        grid-template-columns: min-content max-content ;
    }

    .intro__img {
        grid-area: img;
        min-width: 250px;
        /* to make picture go above subtitle box */
        position: relative;
        z-index: 2;
    }

    .section__subtitle--intro {
        /* prevent subtitle box from stretching out */
        align-self: start;
        /* to make it stretch across all columns */
        grid-column: -1 / 1;
        /* to make subtitle go under the picture and side by side; title is row 1 */
        grid-row: 2;
        text-align: right;
        position: relative;
        /* make subtitle move to left */
        left: -1.5em;
        /* to ensure width matches by extending after moving it to the left */
        width: calc(100% + 1.5em);



    }
}

/* My Education section */

.my-education {
    background-color: var(--clr-dark);
    background-image: url(../images/Jewel.jpg);
    /*make sure background image never repeats itself */
    background-size: cover;
    /* make background image darker, text more obvious */
    background-blend-mode: multiply;
    color: var(--clr-light);
    text-align: center;
}

.section__title--education, .section__title--portfolio{
    color: var(--clr-accent);
    position: relative;
}

/* pseudo element for line below title */
.section__title--education::after {
    content: '';
    display: block;
    width: 3em;
    height: 1px;
    margin: 0.5em auto 1em;
    /* use currentColor for background to match section title services color */
    background: var(--clr-light);
    opacity: 0.25;
}

.schools, .features {
    margin-bottom: 4em;
}

/* for each column, prevents line from being too long and centers element when not in column form for smaller screen size */ 
.school, .feature {
    /* remember to set margin 0 auto when set max width to center */
    max-width: 500px;
    margin: 2em auto;
}

@media (min-width: 800px) {
    .schools, .features {
        /*use only for side by side columns-> display: flex;*/
        /* to wrap the text; lines not too long */
        max-width: 1000px;
        /* have to separately set margin left and right to auto so
        does not override the margin bottom 4em above for services default */
        margin-left: auto;
        margin-right: auto;
    }

    /* '+' looks at the SIBLING (e.g. the second block/right block of the first block) */
    /* first block does not have margin to left */
    /*.school + .school {
        margin-left: 2em;

    }*/
}

/* About me */

.about-me {
    position: relative;
    max-width: 1000px;
    margin: 0 auto;
}

.about-me__img {
    box-shadow: var(--bs);
}

@media (min-width: 600px) {
    .about-me {
        display: grid;
        /* 1fr for main area, 200px for image */
        grid-template-columns: 1fr 200px;
        grid-template-areas: 
            "title img"
            "subtitle img"
            "text img";
        grid-column-gap: 2em;
    }

    .section__title--about {
        grid-area: title;
    }

    .section__subtitle--about {
        /* subtitle starts from first column till last column */
        grid-column: 1 / -1;
        /* since grid column will make subtitle go below to prevent overlap of elements,
        need to set grid row such that subtitle is side by side with image */
        grid-row: 2;
        position: relative;
        left: -1em;
        /* add more than into image as want image to stick out more */
        width: calc(100% + 2em);
        padding-left: 1em;
        /* MAKE SURE text will never touch image */
        /* 200px for image, 2em for subtitle space (right of image), 2em for grid column gap */
        padding-right: calc(200px + 4em)
    }

    .about-me__img {
        grid-area: img;
        position: relative;
        z-index: 2;
    }


    /* Alternative way of using grid columns and not grid area 
    .section__title--about,
    .section__subtitle--about {
        grid-column: 1;
    }
    .about-me__img {
        -means image starting at top and ending at last row 
        grid-row: 1/ -1;
        image at column 2 
        grid-column: 2;
    }
    */
}

/*------- My Experience---------- */

.my-experience {
    color: var(--clr-accent);
    text-align: center;
}

.section__title--experience{
    color: var(--clr-dark);
    position: relative;
}

/* pseudo element for line below title */
.section__title--experience::after {
    content: '';
    display: block;
    width: 3em;
    height: 1px;
    margin: 0.5em auto 1em;
    /* use currentColor for background to match section title services color */
    background: var(--clr-dark);
    opacity: 0.25;
}


/* My Work */

.my-work {
    background-color: var(--clr-dark);
    color: var(--clr-light);
    text-align: center;
}


.portfolio {
    display: grid;
    /* repeat(3, 1fr) will have 3 columns */
    /* NO NEED FOR MEDIA QUERY AS REPEAT AUTO FIT WILL AUTO ADJUST */
    /* use repeat-> auto-fit such that number of images will change according to screen size,
    minimax sets the min to be 300px and max image size to be 1fr */
    grid-template-columns: repeat(auto-fit, minmax(300px,1fr));
    
}

.portfolio__item {
    /* background color visible when cursor hovering */
 
    /* image only expands and shrinks within its box/column when cursor hovering */
    overflow: hidden;
    margin: 2em;
    padding: auto;

}

.portfolio__img {
    max-width: 100%;
    max-height: 300px;
    margin: 0 auto;
    width: auto;  
    transition: 
        transform 750ms cubic-bezier(0.5, 0, 0,5, 1),
        opacity 250ms linear;
}

/* to let the full outline be seen when in focus (from default focus) */
.portfolio__item:focus {
    position: relative;
    z-index: 2;
}

/* make the image transform when cursor hover 
and when clicked (focus) 
CAREFUL: when clicked-> portfolio item is in focus NOT the portfolio image itself*/
.portfolio__item:focus .portfolio__img,
.portfolio__img:hover {
    transform: scale(1.2);
    opacity: .75;
}

/* Footer */

.footer {
    background: #111;
    color: var(--clr-accent);
    text-align: center;
    padding: 2.5em 0;
    /* font size will make all links bigger (including icon links-> icons will become bigger */
    font-size: var(--fs-h3);
}

/* for all links in footer-> make color same as footer text */
.footer a { 
    color: inherit;
    text-decoration: none;
}

.footer__link {
    font-weight: var(--fw-bold);
}
/* make icons slighly fade in and out when hovering over social media links and email address */
.footer__link:hover,
.social-list__link:hover {
    opacity: 0.7;
}

/* underline link when cursor hovering */
.footer__link:hover {
    text-decoration: underline;
}

.social-list {
    /* removes bullet point for list */
    list-style: none;
    display: flex;
    /* used to align NON-TEXT content in center */
    justify-content: center;
    /* make margin bottom 0 to avoid extra space below */
    margin: 2em 0 0;
    /* default padding will make it off center */
    padding: 0;   
}

.social-list__item {
    margin: 0 0.5em;
}

.social-list__link {
    padding: 0.5em;
}

/* Individual portfolio item styles */

.portfolio__item-individual {
    padding: 0 2em 2em;
    max-width: 1000px;
    margin: 0 auto;
}

.portfolio__item-individual p {
    max-width: 600px;
    /* not margin 0 auto as don't want to override default top and bottom margins for p */
    margin-left: auto;
    margin-right: auto;

}

  /* The actual timeline (the vertical ruler) */
  .timeline {
    position: relative;
    max-width: 1200px;
    margin: 0 auto;
  }
  
  /* The actual timeline (the vertical ruler) */
  .timeline::after {
    content: '';
    position: absolute;
    width: 6px;
    background-color: var(--clr-accent);
    top: 0;
    bottom: 0;
    left: 50%;
    margin-left: -3px;
  }
  
  /* Container around content */
  .experience {
    padding: 10px 40px;
    position: relative;
    background-color: inherit;
    width: 50%;
  }
  
  /* The circles on the timeline */
  .experience::after {
    content: '';
    position: absolute;
    width: 25px;
    height: 25px;
    right: -17px;
    background-color:var(--clr-accent);
    border: 4px solid var(--clr-dark);
    top: 15px;
    border-radius: 50%;
    z-index: 1;
  }
  
  /* Place the container to the left */
  .experience-left {
    left: 0;
  }
  
  /* Place the container to the right */
  .experience-right {
    left: 50%;
  }
  
  /* Add arrows to the left container (pointing right) */
  .experience-left::before {
    content: " ";
    height: 0;
    position: absolute;
    top: 22px;
    width: 0;
    z-index: 1;
    right: 30px;
    border: medium solid var(--clr-accent);
    border-width: 10px 0 10px 10px;
    border-color: transparent transparent transparent var(--clr-accent);
  }
  
  /* Add arrows to the right container (pointing left) */
  .experience-right::before {
    content: " ";
    height: 0;
    position: absolute;
    top: 22px;
    width: 0;
    z-index: 1;
    left: 30px;
    border: medium solid var(--clr-accent);
    border-width: 10px 10px 10px 0;
    border-color: transparent var(--clr-accent) transparent transparent;
  }
  
  /* Fix the circle for containers on the right side */
  .experience-right::after {
    left: -16px;
  }
  
  /* The actual content */
  .experience--content {
    padding: 20px 30px;
    background-color: var(--clr-accent);
    position: relative;
    border-radius: 6px;
  }
  
  /* Media queries - Responsive timeline on screens less than 600px wide */
  @media screen and (max-width: 600px) {
  /* Place the timelime to the left */
    .timeline::after {
      left: 31px;
    }
  
  /* Full-width containers */
    .experience {
      width: 100%;
      padding-left: 70px;
      padding-right: 25px;
    }
  
  /* Make sure that all arrows are pointing leftwards */
    .experience::before {
      left: 60px;
      border: medium solid var(--clr-accent);
      border-width: 10px 10px 10px 0;
      border-color: transparent var(--clr-accent) transparent transparent;
    }
  
  /* Make sure all circles are at the same spot */
    .experience-left::after, .experience-right::after {
      left: 15px;
    }
  
  /* Make all right containers behave like the left ones */
    .experience-right {
      left: 0%;
    }
  }

  .experience--content {
      color: var(--clr-dark);
  }

  /*----- Portfolio --------*/

  .my-portfolio {
    background-color: var(--clr-dark);    
    color: var(--clr-light);
    text-align: center;
}

.portfolio-header {
    background-color: var(--clr-dark);
}

.portfolio-img {
    margin: 2em auto;
    max-width: 30%;
}

.portfolio-images {
    display: flex;
    margin: 0 auto;
}